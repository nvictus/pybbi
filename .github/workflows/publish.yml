name: Build and upload to PyPI

on:
  workflow_dispatch:
  release:
    types: [published] 

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        # macos-13 is an intel runner, macos-14 is apple silicon
        os: [ubuntu-latest, macos-13, macos-14]
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Set up QEMU
        if: runner.os == 'Linux'
        uses: docker/setup-qemu-action@v3
        with:
          platforms: all

      # https://cibuildwheel.pypa.io/en/stable/faq/#macos-library-dependencies-do-not-satisfy-target-macos
      - name: Set MacOS compiler target dynamically from the runner
        if: runner.os == 'macOS'
        run: echo "MACOSX_DEPLOYMENT_TARGET=$(sw_vers -productVersion | cut -d. -f1)" >> $GITHUB_ENV

      - name: Build wheels
        env:
          CIBW_ENVIRONMENT: MACOSX_DEPLOYMENT_TARGET=${{ env.MACOSX_DEPLOYMENT_TARGET }}
        uses: pypa/cibuildwheel@v2.22.0

      - uses: actions/upload-artifact@v4
        with:
          name: wheels-${{ matrix.os }}
          path: wheelhouse/*.whl


  build_sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install build-time dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install cython numpy pkgconfig

      - name: Build sdist
        run: python setup.py sdist 

      - uses: actions/upload-artifact@v4
        with:
          name: sdist
          path: dist/*.tar.gz


  upload_pypi:
    needs: [build_wheels, build_sdist]
    runs-on: ubuntu-latest
    permissions:
      id-token: write

    steps:
      - uses: actions/download-artifact@v5
        with:
          name: sdist
          path: dist

      - uses: actions/download-artifact@v5
        with:
          name: wheels-ubuntu-latest
          path: wheel_artifacts
      - uses: actions/download-artifact@v5
        with:
          name: wheels-macos-13
          path: wheel_artifacts
      - uses: actions/download-artifact@v5
        with:
          name: wheels-macos-14
          path: wheel_artifacts
      - name: Gather wheels into ./dist
        run: |
          mkdir -p dist
          find wheel_artifacts -type f -name "*.whl" -exec mv {} dist/ \;

      - name: Publish distribution ðŸ“¦ to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
  